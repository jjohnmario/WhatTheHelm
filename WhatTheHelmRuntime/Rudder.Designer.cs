
namespace WhatTheHelmRuntime
{
    partial class Rudder
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            Mitov.BasicLab.ControlBackground controlBackground2 = new Mitov.BasicLab.ControlBackground();
            Mitov.BasicLab.RectControlBorder rectControlBorder2 = new Mitov.BasicLab.RectControlBorder();
            Mitov.BasicLab.ControlInnerBevel controlInnerBevel2 = new Mitov.BasicLab.ControlInnerBevel();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Rudder));
            Mitov.BasicLab.ElementSize elementSize24 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ControlBevel controlBevel2 = new Mitov.BasicLab.ControlBevel();
            Mitov.BasicLab.ElementSize elementSize25 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize26 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize27 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.VerticalCaption verticalCaption2 = new Mitov.BasicLab.VerticalCaption();
            Mitov.BasicLab.ControlFont controlFont4 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush9 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend9 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends9 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape9 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient9 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor9 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint9 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors9 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints9 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch9 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors9 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen4 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush10 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend10 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends10 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape10 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient10 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor10 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint10 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors10 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints10 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch10 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors10 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound4 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle4 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash4 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize28 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets3 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize5 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize6 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.InstrumentLab.Glass glass2 = new Mitov.InstrumentLab.Glass();
            Mitov.InstrumentLab.OptionalLinearGaugeHand optionalLinearGaugeHand2 = new Mitov.InstrumentLab.OptionalLinearGaugeHand();
            Mitov.InstrumentLab.HandAnimation handAnimation2 = new Mitov.InstrumentLab.HandAnimation();
            Mitov.BasicLab.ElementSize elementSize29 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ElementShadow elementShadow2 = new Mitov.InstrumentLab.ElementShadow();
            Mitov.BasicLab.ElementSize elementSize30 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize31 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize32 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize33 = new Mitov.BasicLab.ElementSize();
            OpenWire.Proxy.SinkPin sinkPin2 = new OpenWire.Proxy.SinkPin();
            Mitov.InstrumentLab.LinearGaugeRail linearGaugeRail2 = new Mitov.InstrumentLab.LinearGaugeRail();
            Mitov.BasicLab.ElementSize elementSize34 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets4 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize7 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize8 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementSize elementSize35 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.AnalogGaugeScaleRanges analogGaugeScaleRanges2 = new Mitov.InstrumentLab.AnalogGaugeScaleRanges();
            Mitov.BasicLab.ElementSize elementSize36 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize37 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.Rotation rotation2 = new Mitov.InstrumentLab.Rotation();
            Mitov.InstrumentLab.ReversibleGaugeScale reversibleGaugeScale2 = new Mitov.InstrumentLab.ReversibleGaugeScale();
            Mitov.InstrumentLab.InstrumentMajorTicks instrumentMajorTicks2 = new Mitov.InstrumentLab.InstrumentMajorTicks();
            Mitov.BasicLab.GPBrush gpBrush11 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend11 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends11 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape11 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient11 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor11 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint11 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors11 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints11 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch11 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors11 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText3 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont5 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush12 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend12 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends12 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape12 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient12 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor12 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint12 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors12 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints12 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch12 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors12 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen5 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush13 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend13 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends13 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape13 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient13 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor13 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint13 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors13 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints13 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch13 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors13 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound5 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle5 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash5 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize38 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize39 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize40 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick3 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty3 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick4 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty4 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.BasicLab.ElementSize elementSize41 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentLabeledTicks instrumentLabeledTicks2 = new Mitov.InstrumentLab.InstrumentLabeledTicks();
            Mitov.BasicLab.GPBrush gpBrush14 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend14 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends14 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape14 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient14 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor14 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint14 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors14 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints14 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch14 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors14 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText4 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont6 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush15 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend15 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends15 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape15 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient15 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor15 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint15 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors15 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints15 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch15 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors15 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen6 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush16 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend16 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends16 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape16 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient16 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor16 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint16 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors16 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints16 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch16 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors16 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound6 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle6 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash6 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize42 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize43 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize44 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize45 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize46 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ScalePrecision scalePrecision2 = new Mitov.InstrumentLab.ScalePrecision();
            CodeArtEng.Gauge.Themes.ThemeColors themeColors1 = new CodeArtEng.Gauge.Themes.ThemeColors();
            CodeArtEng.Gauge.Themes.ThemeColors themeColors2 = new CodeArtEng.Gauge.Themes.ThemeColors();
            CodeArtEng.Gauge.Themes.ThemeColors themeColors3 = new CodeArtEng.Gauge.Themes.ThemeColors();
            this.linearGauge1 = new Mitov.InstrumentLab.LinearGauge(this.components);
            this.circularGauge1 = new CodeArtEng.Gauge.CircularGauge();
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).BeginInit();
            this.SuspendLayout();
            // 
            // linearGauge1
            // 
            controlBackground2.Color = System.Drawing.SystemColors.Control;
            this.linearGauge1.Background = controlBackground2;
            controlInnerBevel2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlInnerBevel2.InternalData")));
            elementSize24.Value = 0.05F;
            controlInnerBevel2.Width = elementSize24;
            rectControlBorder2.BevelInner = controlInnerBevel2;
            elementSize25.Value = 0.05F;
            controlBevel2.Width = elementSize25;
            rectControlBorder2.BevelOuter = controlBevel2;
            rectControlBorder2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            elementSize26.Value = 0.2F;
            rectControlBorder2.CornerRadius = elementSize26;
            rectControlBorder2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("rectControlBorder2.InternalData")));
            elementSize27.Value = 0F;
            rectControlBorder2.Width = elementSize27;
            this.linearGauge1.Border = rectControlBorder2;
            verticalCaption2.Angle = 90F;
            gpBlend9.Blends = gpBlends9;
            gpBlendShape9.Focus = 0.5F;
            gpBlendShape9.Scale = 1F;
            gpBlend9.Shape = gpBlendShape9;
            gpBrush9.Blend = gpBlend9;
            gpBrush9.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor9.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint9.X = 0F;
            gpCenterPoint9.Y = 0F;
            gpCenterColor9.Point = gpCenterPoint9;
            gpGradient9.CenterColor = gpCenterColor9;
            gpGradient9.Colors = gpColors9;
            gpGradient9.Path = gpPoints9;
            gpBrush9.Gradient = gpGradient9;
            gpHatch9.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch9.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush9.Hatch = gpHatch9;
            gpBrush9.InterpolationColors = gpInterpolationColors9;
            controlFont4.Brush = gpBrush9;
            controlFont4.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont4.InternalData")));
            gpBlend10.Blends = gpBlends10;
            gpBlendShape10.Focus = 0.5F;
            gpBlendShape10.Scale = 1F;
            gpBlend10.Shape = gpBlendShape10;
            gpBrush10.Blend = gpBlend10;
            gpBrush10.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor10.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint10.X = 0F;
            gpCenterPoint10.Y = 0F;
            gpCenterColor10.Point = gpCenterPoint10;
            gpGradient10.CenterColor = gpCenterColor10;
            gpGradient10.Colors = gpColors10;
            gpGradient10.Path = gpPoints10;
            gpBrush10.Gradient = gpGradient10;
            gpHatch10.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch10.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush10.Hatch = gpHatch10;
            gpBrush10.InterpolationColors = gpInterpolationColors10;
            gpOptionalMultiPen4.Brush = gpBrush10;
            gpOptionalMultiPen4.Compound = gpPenCompound4;
            gpDashStyle4.CustomDash = gpCustomDash4;
            gpDashStyle4.Offset = 0F;
            gpOptionalMultiPen4.DashStyle = gpDashStyle4;
            gpOptionalMultiPen4.Enabled = false;
            gpOptionalMultiPen4.MiterLimit = 0F;
            gpOptionalMultiPen4.Width = 1F;
            controlFont4.Pen = gpOptionalMultiPen4;
            elementSize28.Value = 0.25F;
            controlFont4.Size = elementSize28;
            verticalCaption2.Font = controlFont4;
            elementOffsetSize5.Value = 0.8F;
            elementOffsets3.X = elementOffsetSize5;
            elementOffsetSize6.Value = 0F;
            elementOffsets3.Y = elementOffsetSize6;
            verticalCaption2.Position = elementOffsets3;
            this.linearGauge1.Caption = verticalCaption2;
            this.linearGauge1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            glass2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.linearGauge1.Glass = glass2;
            handAnimation2.Acceleration = 0.015F;
            handAnimation2.Resistance = 0.16F;
            optionalLinearGaugeHand2.Animation = handAnimation2;
            optionalLinearGaugeHand2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            elementSize29.Value = 0.25F;
            optionalLinearGaugeHand2.Length = elementSize29;
            optionalLinearGaugeHand2.Shadow = elementShadow2;
            elementSize30.Value = 0.15F;
            optionalLinearGaugeHand2.TailIndentSize = elementSize30;
            elementSize31.Value = 0.65F;
            optionalLinearGaugeHand2.TipLength = elementSize31;
            elementSize32.Value = 0.2F;
            optionalLinearGaugeHand2.TipWidth = elementSize32;
            elementSize33.Value = 0.03F;
            optionalLinearGaugeHand2.Width = elementSize33;
            this.linearGauge1.Hand = optionalLinearGaugeHand2;
            this.linearGauge1.InputPin = sinkPin2;
            this.linearGauge1.Location = new System.Drawing.Point(0, 0);
            this.linearGauge1.Max = 100D;
            this.linearGauge1.Min = 0D;
            this.linearGauge1.Name = "linearGauge1";
            elementSize34.Value = 0.9F;
            linearGaugeRail2.Length = elementSize34;
            elementOffsetSize7.Value = 0.1F;
            elementOffsets4.X = elementOffsetSize7;
            elementOffsetSize8.Value = 0F;
            elementOffsets4.Y = elementOffsetSize8;
            linearGaugeRail2.Position = elementOffsets4;
            elementSize35.Value = 0.08F;
            linearGaugeRail2.Width = elementSize35;
            this.linearGauge1.Rail = linearGaugeRail2;
            analogGaugeScaleRanges2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(128)))), ((int)(((byte)(128)))), ((int)(((byte)(128)))));
            elementSize36.Value = 0.2F;
            analogGaugeScaleRanges2.Position = elementSize36;
            elementSize37.Value = 0.05F;
            analogGaugeScaleRanges2.Width = elementSize37;
            this.linearGauge1.Ranges = analogGaugeScaleRanges2;
            rotation2.Angle = 0F;
            rotation2.Width = 0.7F;
            this.linearGauge1.Rotation = rotation2;
            gpBlend11.Blends = gpBlends11;
            gpBlendShape11.Focus = 0.5F;
            gpBlendShape11.Scale = 1F;
            gpBlend11.Shape = gpBlendShape11;
            gpBrush11.Blend = gpBlend11;
            gpBrush11.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor11.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint11.X = 0F;
            gpCenterPoint11.Y = 0F;
            gpCenterColor11.Point = gpCenterPoint11;
            gpGradient11.CenterColor = gpCenterColor11;
            gpGradient11.Colors = gpColors11;
            gpGradient11.Path = gpPoints11;
            gpBrush11.Gradient = gpGradient11;
            gpHatch11.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch11.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush11.Hatch = gpHatch11;
            gpBrush11.InterpolationColors = gpInterpolationColors11;
            instrumentMajorTicks2.Brush = gpBrush11;
            instrumentMajorTicks2.Count = ((uint)(11u));
            instrumentTicksText3.Angle = 0F;
            gpBlend12.Blends = gpBlends12;
            gpBlendShape12.Focus = 0.5F;
            gpBlendShape12.Scale = 1F;
            gpBlend12.Shape = gpBlendShape12;
            gpBrush12.Blend = gpBlend12;
            gpBrush12.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor12.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint12.X = 0F;
            gpCenterPoint12.Y = 0F;
            gpCenterColor12.Point = gpCenterPoint12;
            gpGradient12.CenterColor = gpCenterColor12;
            gpGradient12.Colors = gpColors12;
            gpGradient12.Path = gpPoints12;
            gpBrush12.Gradient = gpGradient12;
            gpHatch12.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch12.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush12.Hatch = gpHatch12;
            gpBrush12.InterpolationColors = gpInterpolationColors12;
            controlFont5.Brush = gpBrush12;
            controlFont5.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont5.InternalData")));
            gpBlend13.Blends = gpBlends13;
            gpBlendShape13.Focus = 0.5F;
            gpBlendShape13.Scale = 1F;
            gpBlend13.Shape = gpBlendShape13;
            gpBrush13.Blend = gpBlend13;
            gpBrush13.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor13.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint13.X = 0F;
            gpCenterPoint13.Y = 0F;
            gpCenterColor13.Point = gpCenterPoint13;
            gpGradient13.CenterColor = gpCenterColor13;
            gpGradient13.Colors = gpColors13;
            gpGradient13.Path = gpPoints13;
            gpBrush13.Gradient = gpGradient13;
            gpHatch13.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch13.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush13.Hatch = gpHatch13;
            gpBrush13.InterpolationColors = gpInterpolationColors13;
            gpOptionalMultiPen5.Brush = gpBrush13;
            gpOptionalMultiPen5.Compound = gpPenCompound5;
            gpDashStyle5.CustomDash = gpCustomDash5;
            gpDashStyle5.Offset = 0F;
            gpOptionalMultiPen5.DashStyle = gpDashStyle5;
            gpOptionalMultiPen5.Enabled = false;
            gpOptionalMultiPen5.MiterLimit = 0F;
            gpOptionalMultiPen5.Width = 1F;
            controlFont5.Pen = gpOptionalMultiPen5;
            elementSize38.Value = 0.09F;
            controlFont5.Size = elementSize38;
            instrumentTicksText3.Font = controlFont5;
            elementSize39.Value = 0.5F;
            instrumentTicksText3.Position = elementSize39;
            instrumentTicksText3.Visible = true;
            instrumentMajorTicks2.Labels = instrumentTicksText3;
            elementSize40.Value = 0.25F;
            instrumentMajorTicks2.Length = elementSize40;
            optionalInstrumentProperty3.Visible = true;
            instrumentEndTick3.TickLabel = optionalInstrumentProperty3;
            instrumentEndTick3.Visible = true;
            instrumentMajorTicks2.MaxTick = instrumentEndTick3;
            optionalInstrumentProperty4.Visible = true;
            instrumentEndTick4.TickLabel = optionalInstrumentProperty4;
            instrumentEndTick4.Visible = true;
            instrumentMajorTicks2.MinTick = instrumentEndTick4;
            elementSize41.Value = 0.01F;
            instrumentMajorTicks2.Thickness = elementSize41;
            instrumentMajorTicks2.Visible = true;
            reversibleGaugeScale2.MajorTicks = instrumentMajorTicks2;
            gpBlend14.Blends = gpBlends14;
            gpBlendShape14.Focus = 0.5F;
            gpBlendShape14.Scale = 1F;
            gpBlend14.Shape = gpBlendShape14;
            gpBrush14.Blend = gpBlend14;
            gpBrush14.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor14.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint14.X = 0F;
            gpCenterPoint14.Y = 0F;
            gpCenterColor14.Point = gpCenterPoint14;
            gpGradient14.CenterColor = gpCenterColor14;
            gpGradient14.Colors = gpColors14;
            gpGradient14.Path = gpPoints14;
            gpBrush14.Gradient = gpGradient14;
            gpHatch14.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch14.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush14.Hatch = gpHatch14;
            gpBrush14.InterpolationColors = gpInterpolationColors14;
            instrumentLabeledTicks2.Brush = gpBrush14;
            instrumentLabeledTicks2.Count = ((uint)(4u));
            instrumentTicksText4.Angle = 0F;
            gpBlend15.Blends = gpBlends15;
            gpBlendShape15.Focus = 0.5F;
            gpBlendShape15.Scale = 1F;
            gpBlend15.Shape = gpBlendShape15;
            gpBrush15.Blend = gpBlend15;
            gpBrush15.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor15.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint15.X = 0F;
            gpCenterPoint15.Y = 0F;
            gpCenterColor15.Point = gpCenterPoint15;
            gpGradient15.CenterColor = gpCenterColor15;
            gpGradient15.Colors = gpColors15;
            gpGradient15.Path = gpPoints15;
            gpBrush15.Gradient = gpGradient15;
            gpHatch15.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch15.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush15.Hatch = gpHatch15;
            gpBrush15.InterpolationColors = gpInterpolationColors15;
            controlFont6.Brush = gpBrush15;
            controlFont6.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont6.InternalData")));
            gpBlend16.Blends = gpBlends16;
            gpBlendShape16.Focus = 0.5F;
            gpBlendShape16.Scale = 1F;
            gpBlend16.Shape = gpBlendShape16;
            gpBrush16.Blend = gpBlend16;
            gpBrush16.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor16.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint16.X = 0F;
            gpCenterPoint16.Y = 0F;
            gpCenterColor16.Point = gpCenterPoint16;
            gpGradient16.CenterColor = gpCenterColor16;
            gpGradient16.Colors = gpColors16;
            gpGradient16.Path = gpPoints16;
            gpBrush16.Gradient = gpGradient16;
            gpHatch16.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch16.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush16.Hatch = gpHatch16;
            gpBrush16.InterpolationColors = gpInterpolationColors16;
            gpOptionalMultiPen6.Brush = gpBrush16;
            gpOptionalMultiPen6.Compound = gpPenCompound6;
            gpDashStyle6.CustomDash = gpCustomDash6;
            gpDashStyle6.Offset = 0F;
            gpOptionalMultiPen6.DashStyle = gpDashStyle6;
            gpOptionalMultiPen6.Enabled = false;
            gpOptionalMultiPen6.MiterLimit = 0F;
            gpOptionalMultiPen6.Width = 1F;
            controlFont6.Pen = gpOptionalMultiPen6;
            elementSize42.Value = 0.065F;
            controlFont6.Size = elementSize42;
            instrumentTicksText4.Font = controlFont6;
            elementSize43.Value = 0.45F;
            instrumentTicksText4.Position = elementSize43;
            instrumentTicksText4.Visible = false;
            instrumentLabeledTicks2.Labels = instrumentTicksText4;
            elementSize44.Value = 0.15F;
            instrumentLabeledTicks2.Length = elementSize44;
            elementSize45.Value = 0.005F;
            instrumentLabeledTicks2.Thickness = elementSize45;
            instrumentLabeledTicks2.Visible = true;
            reversibleGaugeScale2.MinorTicks = instrumentLabeledTicks2;
            elementSize46.Value = 0.25F;
            reversibleGaugeScale2.Position = elementSize46;
            scalePrecision2.FixedPrecision = false;
            scalePrecision2.NumberDigits = ((uint)(2u));
            reversibleGaugeScale2.Precision = scalePrecision2;
            this.linearGauge1.Scale = reversibleGaugeScale2;
            this.linearGauge1.Size = new System.Drawing.Size(60, 250);
            this.linearGauge1.TabIndex = 0;
            this.linearGauge1.TabStop = false;
            this.linearGauge1.Value = 0D;
            // 
            // circularGauge1
            // 
            this.circularGauge1.Location = new System.Drawing.Point(388, 56);
            this.circularGauge1.Name = "circularGauge1";
            this.circularGauge1.PointerPaintMode = CodeArtEng.Gauge.PointerPaintMode.SimpleGradient;
            this.circularGauge1.ScaleFactor = 1D;
            this.circularGauge1.Size = new System.Drawing.Size(192, 191);
            this.circularGauge1.TabIndex = 0;
            this.circularGauge1.Theme = CodeArtEng.Gauge.GaugeTheme.DarkGrey;
            this.circularGauge1.Title = "";
            this.circularGauge1.Unit = "km/h";
            this.circularGauge1.UserDefinedColors.Base = themeColors1;
            themeColors2.PointerColor = System.Drawing.Color.Red;
            this.circularGauge1.UserDefinedColors.Error = themeColors2;
            themeColors3.PointerColor = System.Drawing.Color.Orange;
            this.circularGauge1.UserDefinedColors.Warning = themeColors3;
            // 
            // Rudder
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.ClientSize = new System.Drawing.Size(800, 480);
            this.ControlBox = false;
            this.Controls.Add(this.circularGauge1);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "Rudder";
            this.Text = "Gps";
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).EndInit();
            this.ResumeLayout(false);

        }

        #endregion

        private Mitov.InstrumentLab.LinearGauge linearGauge1;
        private CodeArtEng.Gauge.CircularGauge circularGauge1;
    }
}