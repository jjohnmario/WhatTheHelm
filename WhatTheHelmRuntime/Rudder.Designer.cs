
namespace WhatTheHelmRuntime
{
    partial class Rudder
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            Mitov.BasicLab.ControlBackground controlBackground1 = new Mitov.BasicLab.ControlBackground();
            Mitov.BasicLab.RectControlBorder rectControlBorder1 = new Mitov.BasicLab.RectControlBorder();
            Mitov.BasicLab.ControlInnerBevel controlInnerBevel1 = new Mitov.BasicLab.ControlInnerBevel();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Rudder));
            Mitov.BasicLab.ElementSize elementSize1 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ControlBevel controlBevel1 = new Mitov.BasicLab.ControlBevel();
            Mitov.BasicLab.ElementSize elementSize2 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize3 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize4 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.VerticalCaption verticalCaption1 = new Mitov.BasicLab.VerticalCaption();
            Mitov.BasicLab.ControlFont controlFont1 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush1 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend1 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends1 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape1 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient1 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor1 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint1 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors1 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints1 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch1 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors1 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen1 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush2 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend2 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends2 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape2 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient2 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor2 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint2 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors2 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints2 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch2 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors2 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound1 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle1 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash1 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize5 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets1 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize1 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize2 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.InstrumentLab.Glass glass1 = new Mitov.InstrumentLab.Glass();
            Mitov.InstrumentLab.OptionalLinearGaugeHand optionalLinearGaugeHand1 = new Mitov.InstrumentLab.OptionalLinearGaugeHand();
            Mitov.InstrumentLab.HandAnimation handAnimation1 = new Mitov.InstrumentLab.HandAnimation();
            Mitov.BasicLab.ElementSize elementSize6 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ElementShadow elementShadow1 = new Mitov.InstrumentLab.ElementShadow();
            Mitov.BasicLab.ElementSize elementSize7 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize8 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize9 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize10 = new Mitov.BasicLab.ElementSize();
            OpenWire.Proxy.SinkPin sinkPin1 = new OpenWire.Proxy.SinkPin();
            Mitov.InstrumentLab.LinearGaugeRail linearGaugeRail1 = new Mitov.InstrumentLab.LinearGaugeRail();
            Mitov.BasicLab.ElementSize elementSize11 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets2 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize3 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize4 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementSize elementSize12 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.AnalogGaugeScaleRanges analogGaugeScaleRanges1 = new Mitov.InstrumentLab.AnalogGaugeScaleRanges();
            Mitov.BasicLab.ElementSize elementSize13 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize14 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.Rotation rotation1 = new Mitov.InstrumentLab.Rotation();
            Mitov.InstrumentLab.ReversibleGaugeScale reversibleGaugeScale1 = new Mitov.InstrumentLab.ReversibleGaugeScale();
            Mitov.InstrumentLab.InstrumentMajorTicks instrumentMajorTicks1 = new Mitov.InstrumentLab.InstrumentMajorTicks();
            Mitov.BasicLab.GPBrush gpBrush3 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend3 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends3 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape3 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient3 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor3 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint3 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors3 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints3 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch3 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors3 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText1 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont2 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush4 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend4 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends4 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape4 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient4 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor4 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint4 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors4 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints4 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch4 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors4 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen2 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush5 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend5 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends5 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape5 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient5 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor5 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint5 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors5 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints5 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch5 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors5 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound2 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle2 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash2 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize15 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize16 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize17 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick1 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty1 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick2 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty2 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.BasicLab.ElementSize elementSize18 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentLabeledTicks instrumentLabeledTicks1 = new Mitov.InstrumentLab.InstrumentLabeledTicks();
            Mitov.BasicLab.GPBrush gpBrush6 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend6 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends6 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape6 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient6 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor6 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint6 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors6 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints6 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch6 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors6 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText2 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont3 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush7 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend7 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends7 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape7 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient7 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor7 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint7 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors7 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints7 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch7 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors7 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen3 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush8 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend8 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends8 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape8 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient8 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor8 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint8 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors8 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints8 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch8 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors8 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound3 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle3 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash3 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize19 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize20 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize21 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize22 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize23 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ScalePrecision scalePrecision1 = new Mitov.InstrumentLab.ScalePrecision();
            this.linearGauge1 = new Mitov.InstrumentLab.LinearGauge(this.components);
            this.elementHostRudder = new System.Windows.Forms.Integration.ElementHost();
            this.rudderPosGauge = new WhatTheHelmFormsLib.RudderPosGauge();
            this.elementHostSync = new System.Windows.Forms.Integration.ElementHost();
            this.engineSyncGauge = new WhatTheHelmFormsLib.EngineSyncGauge();
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).BeginInit();
            this.SuspendLayout();
            // 
            // linearGauge1
            // 
            controlBackground1.Color = System.Drawing.SystemColors.Control;
            this.linearGauge1.Background = controlBackground1;
            controlInnerBevel1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlInnerBevel1.InternalData")));
            elementSize1.Value = 0.05F;
            controlInnerBevel1.Width = elementSize1;
            rectControlBorder1.BevelInner = controlInnerBevel1;
            elementSize2.Value = 0.05F;
            controlBevel1.Width = elementSize2;
            rectControlBorder1.BevelOuter = controlBevel1;
            rectControlBorder1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            elementSize3.Value = 0.2F;
            rectControlBorder1.CornerRadius = elementSize3;
            rectControlBorder1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("rectControlBorder1.InternalData")));
            elementSize4.Value = 0F;
            rectControlBorder1.Width = elementSize4;
            this.linearGauge1.Border = rectControlBorder1;
            verticalCaption1.Angle = 90F;
            gpBlend1.Blends = gpBlends1;
            gpBlendShape1.Focus = 0.5F;
            gpBlendShape1.Scale = 1F;
            gpBlend1.Shape = gpBlendShape1;
            gpBrush1.Blend = gpBlend1;
            gpBrush1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint1.X = 0F;
            gpCenterPoint1.Y = 0F;
            gpCenterColor1.Point = gpCenterPoint1;
            gpGradient1.CenterColor = gpCenterColor1;
            gpGradient1.Colors = gpColors1;
            gpGradient1.Path = gpPoints1;
            gpBrush1.Gradient = gpGradient1;
            gpHatch1.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch1.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush1.Hatch = gpHatch1;
            gpBrush1.InterpolationColors = gpInterpolationColors1;
            controlFont1.Brush = gpBrush1;
            controlFont1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont1.InternalData")));
            gpBlend2.Blends = gpBlends2;
            gpBlendShape2.Focus = 0.5F;
            gpBlendShape2.Scale = 1F;
            gpBlend2.Shape = gpBlendShape2;
            gpBrush2.Blend = gpBlend2;
            gpBrush2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint2.X = 0F;
            gpCenterPoint2.Y = 0F;
            gpCenterColor2.Point = gpCenterPoint2;
            gpGradient2.CenterColor = gpCenterColor2;
            gpGradient2.Colors = gpColors2;
            gpGradient2.Path = gpPoints2;
            gpBrush2.Gradient = gpGradient2;
            gpHatch2.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch2.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush2.Hatch = gpHatch2;
            gpBrush2.InterpolationColors = gpInterpolationColors2;
            gpOptionalMultiPen1.Brush = gpBrush2;
            gpOptionalMultiPen1.Compound = gpPenCompound1;
            gpDashStyle1.CustomDash = gpCustomDash1;
            gpDashStyle1.Offset = 0F;
            gpOptionalMultiPen1.DashStyle = gpDashStyle1;
            gpOptionalMultiPen1.Enabled = false;
            gpOptionalMultiPen1.MiterLimit = 0F;
            gpOptionalMultiPen1.Width = 1F;
            controlFont1.Pen = gpOptionalMultiPen1;
            elementSize5.Value = 0.25F;
            controlFont1.Size = elementSize5;
            verticalCaption1.Font = controlFont1;
            elementOffsetSize1.Value = 0.8F;
            elementOffsets1.X = elementOffsetSize1;
            elementOffsetSize2.Value = 0F;
            elementOffsets1.Y = elementOffsetSize2;
            verticalCaption1.Position = elementOffsets1;
            this.linearGauge1.Caption = verticalCaption1;
            this.linearGauge1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            glass1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.linearGauge1.Glass = glass1;
            handAnimation1.Acceleration = 0.015F;
            handAnimation1.Resistance = 0.16F;
            optionalLinearGaugeHand1.Animation = handAnimation1;
            optionalLinearGaugeHand1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            elementSize6.Value = 0.25F;
            optionalLinearGaugeHand1.Length = elementSize6;
            optionalLinearGaugeHand1.Shadow = elementShadow1;
            elementSize7.Value = 0.15F;
            optionalLinearGaugeHand1.TailIndentSize = elementSize7;
            elementSize8.Value = 0.65F;
            optionalLinearGaugeHand1.TipLength = elementSize8;
            elementSize9.Value = 0.2F;
            optionalLinearGaugeHand1.TipWidth = elementSize9;
            elementSize10.Value = 0.03F;
            optionalLinearGaugeHand1.Width = elementSize10;
            this.linearGauge1.Hand = optionalLinearGaugeHand1;
            this.linearGauge1.InputPin = sinkPin1;
            this.linearGauge1.Location = new System.Drawing.Point(0, 0);
            this.linearGauge1.Max = 100D;
            this.linearGauge1.Min = 0D;
            this.linearGauge1.Name = "linearGauge1";
            elementSize11.Value = 0.9F;
            linearGaugeRail1.Length = elementSize11;
            elementOffsetSize3.Value = 0.1F;
            elementOffsets2.X = elementOffsetSize3;
            elementOffsetSize4.Value = 0F;
            elementOffsets2.Y = elementOffsetSize4;
            linearGaugeRail1.Position = elementOffsets2;
            elementSize12.Value = 0.08F;
            linearGaugeRail1.Width = elementSize12;
            this.linearGauge1.Rail = linearGaugeRail1;
            analogGaugeScaleRanges1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(128)))), ((int)(((byte)(128)))), ((int)(((byte)(128)))));
            elementSize13.Value = 0.2F;
            analogGaugeScaleRanges1.Position = elementSize13;
            elementSize14.Value = 0.05F;
            analogGaugeScaleRanges1.Width = elementSize14;
            this.linearGauge1.Ranges = analogGaugeScaleRanges1;
            rotation1.Angle = 0F;
            rotation1.Width = 0.7F;
            this.linearGauge1.Rotation = rotation1;
            gpBlend3.Blends = gpBlends3;
            gpBlendShape3.Focus = 0.5F;
            gpBlendShape3.Scale = 1F;
            gpBlend3.Shape = gpBlendShape3;
            gpBrush3.Blend = gpBlend3;
            gpBrush3.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor3.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint3.X = 0F;
            gpCenterPoint3.Y = 0F;
            gpCenterColor3.Point = gpCenterPoint3;
            gpGradient3.CenterColor = gpCenterColor3;
            gpGradient3.Colors = gpColors3;
            gpGradient3.Path = gpPoints3;
            gpBrush3.Gradient = gpGradient3;
            gpHatch3.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch3.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush3.Hatch = gpHatch3;
            gpBrush3.InterpolationColors = gpInterpolationColors3;
            instrumentMajorTicks1.Brush = gpBrush3;
            instrumentMajorTicks1.Count = ((uint)(11u));
            instrumentTicksText1.Angle = 0F;
            gpBlend4.Blends = gpBlends4;
            gpBlendShape4.Focus = 0.5F;
            gpBlendShape4.Scale = 1F;
            gpBlend4.Shape = gpBlendShape4;
            gpBrush4.Blend = gpBlend4;
            gpBrush4.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor4.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint4.X = 0F;
            gpCenterPoint4.Y = 0F;
            gpCenterColor4.Point = gpCenterPoint4;
            gpGradient4.CenterColor = gpCenterColor4;
            gpGradient4.Colors = gpColors4;
            gpGradient4.Path = gpPoints4;
            gpBrush4.Gradient = gpGradient4;
            gpHatch4.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch4.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush4.Hatch = gpHatch4;
            gpBrush4.InterpolationColors = gpInterpolationColors4;
            controlFont2.Brush = gpBrush4;
            controlFont2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont2.InternalData")));
            gpBlend5.Blends = gpBlends5;
            gpBlendShape5.Focus = 0.5F;
            gpBlendShape5.Scale = 1F;
            gpBlend5.Shape = gpBlendShape5;
            gpBrush5.Blend = gpBlend5;
            gpBrush5.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor5.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint5.X = 0F;
            gpCenterPoint5.Y = 0F;
            gpCenterColor5.Point = gpCenterPoint5;
            gpGradient5.CenterColor = gpCenterColor5;
            gpGradient5.Colors = gpColors5;
            gpGradient5.Path = gpPoints5;
            gpBrush5.Gradient = gpGradient5;
            gpHatch5.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch5.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush5.Hatch = gpHatch5;
            gpBrush5.InterpolationColors = gpInterpolationColors5;
            gpOptionalMultiPen2.Brush = gpBrush5;
            gpOptionalMultiPen2.Compound = gpPenCompound2;
            gpDashStyle2.CustomDash = gpCustomDash2;
            gpDashStyle2.Offset = 0F;
            gpOptionalMultiPen2.DashStyle = gpDashStyle2;
            gpOptionalMultiPen2.Enabled = false;
            gpOptionalMultiPen2.MiterLimit = 0F;
            gpOptionalMultiPen2.Width = 1F;
            controlFont2.Pen = gpOptionalMultiPen2;
            elementSize15.Value = 0.09F;
            controlFont2.Size = elementSize15;
            instrumentTicksText1.Font = controlFont2;
            elementSize16.Value = 0.5F;
            instrumentTicksText1.Position = elementSize16;
            instrumentTicksText1.Visible = true;
            instrumentMajorTicks1.Labels = instrumentTicksText1;
            elementSize17.Value = 0.25F;
            instrumentMajorTicks1.Length = elementSize17;
            optionalInstrumentProperty1.Visible = true;
            instrumentEndTick1.TickLabel = optionalInstrumentProperty1;
            instrumentEndTick1.Visible = true;
            instrumentMajorTicks1.MaxTick = instrumentEndTick1;
            optionalInstrumentProperty2.Visible = true;
            instrumentEndTick2.TickLabel = optionalInstrumentProperty2;
            instrumentEndTick2.Visible = true;
            instrumentMajorTicks1.MinTick = instrumentEndTick2;
            elementSize18.Value = 0.01F;
            instrumentMajorTicks1.Thickness = elementSize18;
            instrumentMajorTicks1.Visible = true;
            reversibleGaugeScale1.MajorTicks = instrumentMajorTicks1;
            gpBlend6.Blends = gpBlends6;
            gpBlendShape6.Focus = 0.5F;
            gpBlendShape6.Scale = 1F;
            gpBlend6.Shape = gpBlendShape6;
            gpBrush6.Blend = gpBlend6;
            gpBrush6.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor6.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint6.X = 0F;
            gpCenterPoint6.Y = 0F;
            gpCenterColor6.Point = gpCenterPoint6;
            gpGradient6.CenterColor = gpCenterColor6;
            gpGradient6.Colors = gpColors6;
            gpGradient6.Path = gpPoints6;
            gpBrush6.Gradient = gpGradient6;
            gpHatch6.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch6.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush6.Hatch = gpHatch6;
            gpBrush6.InterpolationColors = gpInterpolationColors6;
            instrumentLabeledTicks1.Brush = gpBrush6;
            instrumentLabeledTicks1.Count = ((uint)(4u));
            instrumentTicksText2.Angle = 0F;
            gpBlend7.Blends = gpBlends7;
            gpBlendShape7.Focus = 0.5F;
            gpBlendShape7.Scale = 1F;
            gpBlend7.Shape = gpBlendShape7;
            gpBrush7.Blend = gpBlend7;
            gpBrush7.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor7.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint7.X = 0F;
            gpCenterPoint7.Y = 0F;
            gpCenterColor7.Point = gpCenterPoint7;
            gpGradient7.CenterColor = gpCenterColor7;
            gpGradient7.Colors = gpColors7;
            gpGradient7.Path = gpPoints7;
            gpBrush7.Gradient = gpGradient7;
            gpHatch7.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch7.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush7.Hatch = gpHatch7;
            gpBrush7.InterpolationColors = gpInterpolationColors7;
            controlFont3.Brush = gpBrush7;
            controlFont3.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont3.InternalData")));
            gpBlend8.Blends = gpBlends8;
            gpBlendShape8.Focus = 0.5F;
            gpBlendShape8.Scale = 1F;
            gpBlend8.Shape = gpBlendShape8;
            gpBrush8.Blend = gpBlend8;
            gpBrush8.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor8.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint8.X = 0F;
            gpCenterPoint8.Y = 0F;
            gpCenterColor8.Point = gpCenterPoint8;
            gpGradient8.CenterColor = gpCenterColor8;
            gpGradient8.Colors = gpColors8;
            gpGradient8.Path = gpPoints8;
            gpBrush8.Gradient = gpGradient8;
            gpHatch8.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch8.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush8.Hatch = gpHatch8;
            gpBrush8.InterpolationColors = gpInterpolationColors8;
            gpOptionalMultiPen3.Brush = gpBrush8;
            gpOptionalMultiPen3.Compound = gpPenCompound3;
            gpDashStyle3.CustomDash = gpCustomDash3;
            gpDashStyle3.Offset = 0F;
            gpOptionalMultiPen3.DashStyle = gpDashStyle3;
            gpOptionalMultiPen3.Enabled = false;
            gpOptionalMultiPen3.MiterLimit = 0F;
            gpOptionalMultiPen3.Width = 1F;
            controlFont3.Pen = gpOptionalMultiPen3;
            elementSize19.Value = 0.065F;
            controlFont3.Size = elementSize19;
            instrumentTicksText2.Font = controlFont3;
            elementSize20.Value = 0.45F;
            instrumentTicksText2.Position = elementSize20;
            instrumentTicksText2.Visible = false;
            instrumentLabeledTicks1.Labels = instrumentTicksText2;
            elementSize21.Value = 0.15F;
            instrumentLabeledTicks1.Length = elementSize21;
            elementSize22.Value = 0.005F;
            instrumentLabeledTicks1.Thickness = elementSize22;
            instrumentLabeledTicks1.Visible = true;
            reversibleGaugeScale1.MinorTicks = instrumentLabeledTicks1;
            elementSize23.Value = 0.25F;
            reversibleGaugeScale1.Position = elementSize23;
            scalePrecision1.FixedPrecision = false;
            scalePrecision1.NumberDigits = ((uint)(2u));
            reversibleGaugeScale1.Precision = scalePrecision1;
            this.linearGauge1.Scale = reversibleGaugeScale1;
            this.linearGauge1.Size = new System.Drawing.Size(60, 250);
            this.linearGauge1.TabIndex = 0;
            this.linearGauge1.TabStop = false;
            this.linearGauge1.Value = 0D;
            // 
            // elementHostRudder
            // 
            this.elementHostRudder.Location = new System.Drawing.Point(73, 79);
            this.elementHostRudder.Name = "elementHostRudder";
            this.elementHostRudder.Size = new System.Drawing.Size(300, 300);
            this.elementHostRudder.TabIndex = 153;
            this.elementHostRudder.Text = "elementHost2";
            this.elementHostRudder.Child = this.rudderPosGauge;
            // 
            // elementHostSync
            // 
            this.elementHostSync.Location = new System.Drawing.Point(429, 79);
            this.elementHostSync.Name = "elementHostSync";
            this.elementHostSync.Size = new System.Drawing.Size(300, 300);
            this.elementHostSync.TabIndex = 154;
            this.elementHostSync.Text = "elementHost1";
            this.elementHostSync.Child = this.engineSyncGauge;
            // 
            // Rudder
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.ClientSize = new System.Drawing.Size(800, 480);
            this.ControlBox = false;
            this.Controls.Add(this.elementHostSync);
            this.Controls.Add(this.elementHostRudder);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;
            this.Icon = ((System.Drawing.Icon)(resources.GetObject("$this.Icon")));
            this.Margin = new System.Windows.Forms.Padding(2);
            this.Name = "Rudder";
            this.Text = "Gps";
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).EndInit();
            this.ResumeLayout(false);

        }

        #endregion

        private Mitov.InstrumentLab.LinearGauge linearGauge1;
        private System.Windows.Forms.Integration.ElementHost elementHostRudder;
        private WhatTheHelmFormsLib.RudderPosGauge rudderPosGauge;
        private System.Windows.Forms.Integration.ElementHost elementHostSync;
        private WhatTheHelmFormsLib.EngineSyncGauge engineSyncGauge;
    }
}