
namespace WhatTheHelmRuntime
{
    partial class Rudder
    {
        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Windows Form Designer generated code

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            Mitov.BasicLab.ControlBackground controlBackground1 = new Mitov.BasicLab.ControlBackground();
            Mitov.BasicLab.RectControlBorder rectControlBorder1 = new Mitov.BasicLab.RectControlBorder();
            Mitov.BasicLab.ControlInnerBevel controlInnerBevel1 = new Mitov.BasicLab.ControlInnerBevel();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Rudder));
            Mitov.BasicLab.ElementSize elementSize1 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ControlBevel controlBevel1 = new Mitov.BasicLab.ControlBevel();
            Mitov.BasicLab.ElementSize elementSize2 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize3 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize4 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.VerticalCaption verticalCaption1 = new Mitov.BasicLab.VerticalCaption();
            Mitov.BasicLab.ControlFont controlFont1 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush1 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend1 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends1 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape1 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient1 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor1 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint1 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors1 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints1 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch1 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors1 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen1 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush2 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend2 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends2 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape2 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient2 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor2 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint2 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors2 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints2 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch2 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors2 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound1 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle1 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash1 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize5 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets1 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize1 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize2 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.InstrumentLab.Glass glass1 = new Mitov.InstrumentLab.Glass();
            Mitov.InstrumentLab.OptionalLinearGaugeHand optionalLinearGaugeHand1 = new Mitov.InstrumentLab.OptionalLinearGaugeHand();
            Mitov.InstrumentLab.HandAnimation handAnimation1 = new Mitov.InstrumentLab.HandAnimation();
            Mitov.BasicLab.ElementSize elementSize6 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ElementShadow elementShadow1 = new Mitov.InstrumentLab.ElementShadow();
            Mitov.BasicLab.ElementSize elementSize7 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize8 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize9 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize10 = new Mitov.BasicLab.ElementSize();
            OpenWire.Proxy.SinkPin sinkPin1 = new OpenWire.Proxy.SinkPin();
            Mitov.InstrumentLab.LinearGaugeRail linearGaugeRail1 = new Mitov.InstrumentLab.LinearGaugeRail();
            Mitov.BasicLab.ElementSize elementSize11 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets2 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize3 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize4 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementSize elementSize12 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.AnalogGaugeScaleRanges analogGaugeScaleRanges1 = new Mitov.InstrumentLab.AnalogGaugeScaleRanges();
            Mitov.BasicLab.ElementSize elementSize13 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize14 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.Rotation rotation1 = new Mitov.InstrumentLab.Rotation();
            Mitov.InstrumentLab.ReversibleGaugeScale reversibleGaugeScale1 = new Mitov.InstrumentLab.ReversibleGaugeScale();
            Mitov.InstrumentLab.InstrumentMajorTicks instrumentMajorTicks1 = new Mitov.InstrumentLab.InstrumentMajorTicks();
            Mitov.BasicLab.GPBrush gpBrush3 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend3 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends3 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape3 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient3 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor3 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint3 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors3 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints3 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch3 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors3 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText1 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont2 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush4 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend4 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends4 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape4 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient4 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor4 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint4 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors4 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints4 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch4 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors4 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen2 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush5 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend5 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends5 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape5 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient5 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor5 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint5 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors5 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints5 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch5 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors5 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound2 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle2 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash2 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize15 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize16 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize17 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick1 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty1 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick2 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty2 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.BasicLab.ElementSize elementSize18 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentLabeledTicks instrumentLabeledTicks1 = new Mitov.InstrumentLab.InstrumentLabeledTicks();
            Mitov.BasicLab.GPBrush gpBrush6 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend6 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends6 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape6 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient6 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor6 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint6 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors6 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints6 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch6 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors6 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText2 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont3 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush7 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend7 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends7 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape7 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient7 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor7 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint7 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors7 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints7 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch7 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors7 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen3 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush8 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend8 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends8 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape8 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient8 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor8 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint8 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors8 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints8 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch8 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors8 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound3 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle3 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash3 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize19 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize20 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize21 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize22 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize23 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ScalePrecision scalePrecision1 = new Mitov.InstrumentLab.ScalePrecision();
            Mitov.BasicLab.ControlBackground controlBackground2 = new Mitov.BasicLab.ControlBackground();
            Mitov.BasicLab.RectControlBorder rectControlBorder2 = new Mitov.BasicLab.RectControlBorder();
            Mitov.BasicLab.ControlInnerBevel controlInnerBevel2 = new Mitov.BasicLab.ControlInnerBevel();
            Mitov.BasicLab.ElementSize elementSize24 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ControlBevel controlBevel2 = new Mitov.BasicLab.ControlBevel();
            Mitov.BasicLab.ElementSize elementSize25 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize26 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize27 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.VerticalCaption verticalCaption2 = new Mitov.BasicLab.VerticalCaption();
            Mitov.BasicLab.ControlFont controlFont4 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush9 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend9 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends9 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape9 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient9 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor9 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint9 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors9 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints9 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch9 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors9 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen4 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush10 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend10 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends10 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape10 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient10 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor10 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint10 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors10 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints10 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch10 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors10 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound4 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle4 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash4 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize28 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets3 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize5 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize6 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.InstrumentLab.Glass glass2 = new Mitov.InstrumentLab.Glass();
            Mitov.InstrumentLab.OptionalLinearGaugeHand optionalLinearGaugeHand2 = new Mitov.InstrumentLab.OptionalLinearGaugeHand();
            Mitov.InstrumentLab.HandAnimation handAnimation2 = new Mitov.InstrumentLab.HandAnimation();
            Mitov.BasicLab.ElementSize elementSize29 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ElementShadow elementShadow2 = new Mitov.InstrumentLab.ElementShadow();
            Mitov.BasicLab.ElementSize elementSize30 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize31 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize32 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize33 = new Mitov.BasicLab.ElementSize();
            OpenWire.Proxy.SinkPin sinkPin2 = new OpenWire.Proxy.SinkPin();
            Mitov.InstrumentLab.LinearGaugeRail linearGaugeRail2 = new Mitov.InstrumentLab.LinearGaugeRail();
            Mitov.BasicLab.ElementSize elementSize34 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementOffsets elementOffsets4 = new Mitov.BasicLab.ElementOffsets();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize7 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementOffsetSize elementOffsetSize8 = new Mitov.BasicLab.ElementOffsetSize();
            Mitov.BasicLab.ElementSize elementSize35 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.AnalogGaugeScaleRanges analogGaugeScaleRanges2 = new Mitov.InstrumentLab.AnalogGaugeScaleRanges();
            Mitov.BasicLab.ElementSize elementSize36 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize37 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.Rotation rotation2 = new Mitov.InstrumentLab.Rotation();
            Mitov.InstrumentLab.ReversibleGaugeScale reversibleGaugeScale2 = new Mitov.InstrumentLab.ReversibleGaugeScale();
            Mitov.InstrumentLab.InstrumentMajorTicks instrumentMajorTicks2 = new Mitov.InstrumentLab.InstrumentMajorTicks();
            Mitov.BasicLab.GPBrush gpBrush11 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend11 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends11 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape11 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient11 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor11 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint11 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors11 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints11 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch11 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors11 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText3 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont5 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush12 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend12 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends12 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape12 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient12 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor12 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint12 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors12 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints12 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch12 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors12 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen5 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush13 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend13 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends13 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape13 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient13 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor13 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint13 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors13 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints13 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch13 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors13 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound5 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle5 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash5 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize38 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize39 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize40 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick3 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty3 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.InstrumentLab.InstrumentEndTick instrumentEndTick4 = new Mitov.InstrumentLab.InstrumentEndTick();
            Mitov.BasicLab.OptionalInstrumentProperty optionalInstrumentProperty4 = new Mitov.BasicLab.OptionalInstrumentProperty();
            Mitov.BasicLab.ElementSize elementSize41 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.InstrumentLabeledTicks instrumentLabeledTicks2 = new Mitov.InstrumentLab.InstrumentLabeledTicks();
            Mitov.BasicLab.GPBrush gpBrush14 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend14 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends14 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape14 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient14 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor14 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint14 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors14 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints14 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch14 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors14 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.InstrumentLab.InstrumentTicksText instrumentTicksText4 = new Mitov.InstrumentLab.InstrumentTicksText();
            Mitov.BasicLab.ControlFont controlFont6 = new Mitov.BasicLab.ControlFont();
            Mitov.BasicLab.GPBrush gpBrush15 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend15 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends15 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape15 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient15 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor15 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint15 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors15 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints15 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch15 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors15 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPOptionalMultiPen gpOptionalMultiPen6 = new Mitov.BasicLab.GPOptionalMultiPen();
            Mitov.BasicLab.GPBrush gpBrush16 = new Mitov.BasicLab.GPBrush();
            Mitov.BasicLab.GPBlend gpBlend16 = new Mitov.BasicLab.GPBlend();
            Mitov.BasicLab.GPBlends gpBlends16 = new Mitov.BasicLab.GPBlends();
            Mitov.BasicLab.GPBlendShape gpBlendShape16 = new Mitov.BasicLab.GPBlendShape();
            Mitov.BasicLab.GPGradient gpGradient16 = new Mitov.BasicLab.GPGradient();
            Mitov.BasicLab.GPCenterColor gpCenterColor16 = new Mitov.BasicLab.GPCenterColor();
            Mitov.BasicLab.GPCenterPoint gpCenterPoint16 = new Mitov.BasicLab.GPCenterPoint();
            Mitov.BasicLab.GPColors gpColors16 = new Mitov.BasicLab.GPColors();
            Mitov.BasicLab.GPPoints gpPoints16 = new Mitov.BasicLab.GPPoints();
            Mitov.BasicLab.GPHatch gpHatch16 = new Mitov.BasicLab.GPHatch();
            Mitov.BasicLab.GPInterpolationColors gpInterpolationColors16 = new Mitov.BasicLab.GPInterpolationColors();
            Mitov.BasicLab.GPPenCompound gpPenCompound6 = new Mitov.BasicLab.GPPenCompound();
            Mitov.BasicLab.GPDashStyle gpDashStyle6 = new Mitov.BasicLab.GPDashStyle();
            Mitov.BasicLab.GPCustomDash gpCustomDash6 = new Mitov.BasicLab.GPCustomDash();
            Mitov.BasicLab.ElementSize elementSize42 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize43 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize44 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize45 = new Mitov.BasicLab.ElementSize();
            Mitov.BasicLab.ElementSize elementSize46 = new Mitov.BasicLab.ElementSize();
            Mitov.InstrumentLab.ScalePrecision scalePrecision2 = new Mitov.InstrumentLab.ScalePrecision();
            this.linearGauge1 = new Mitov.InstrumentLab.LinearGauge(this.components);
            this.gaugeRudderPosition = new Mitov.InstrumentLab.LinearGauge(this.components);
            this.label36 = new System.Windows.Forms.Label();
            this.label1 = new System.Windows.Forms.Label();
            this.lblPortSlow = new System.Windows.Forms.Label();
            this.lblSync = new System.Windows.Forms.Label();
            this.lblStbdSlow = new System.Windows.Forms.Label();
            this.panel2 = new System.Windows.Forms.Panel();
            this.elementHost1 = new System.Windows.Forms.Integration.ElementHost();
            this.rudderPosGauge1 = new WhatTheHelmFormsLib.RudderPosGauge();
            this.elementHost2 = new System.Windows.Forms.Integration.ElementHost();
            this.rudderPosGauge2 = new WhatTheHelmFormsLib.RudderPosGauge();
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.gaugeRudderPosition)).BeginInit();
            this.SuspendLayout();
            // 
            // linearGauge1
            // 
            controlBackground1.Color = System.Drawing.SystemColors.Control;
            this.linearGauge1.Background = controlBackground1;
            controlInnerBevel1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlInnerBevel1.InternalData")));
            elementSize1.Value = 0.05F;
            controlInnerBevel1.Width = elementSize1;
            rectControlBorder1.BevelInner = controlInnerBevel1;
            elementSize2.Value = 0.05F;
            controlBevel1.Width = elementSize2;
            rectControlBorder1.BevelOuter = controlBevel1;
            rectControlBorder1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            elementSize3.Value = 0.2F;
            rectControlBorder1.CornerRadius = elementSize3;
            rectControlBorder1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("rectControlBorder1.InternalData")));
            elementSize4.Value = 0F;
            rectControlBorder1.Width = elementSize4;
            this.linearGauge1.Border = rectControlBorder1;
            verticalCaption1.Angle = 90F;
            gpBlend1.Blends = gpBlends1;
            gpBlendShape1.Focus = 0.5F;
            gpBlendShape1.Scale = 1F;
            gpBlend1.Shape = gpBlendShape1;
            gpBrush1.Blend = gpBlend1;
            gpBrush1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint1.X = 0F;
            gpCenterPoint1.Y = 0F;
            gpCenterColor1.Point = gpCenterPoint1;
            gpGradient1.CenterColor = gpCenterColor1;
            gpGradient1.Colors = gpColors1;
            gpGradient1.Path = gpPoints1;
            gpBrush1.Gradient = gpGradient1;
            gpHatch1.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch1.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush1.Hatch = gpHatch1;
            gpBrush1.InterpolationColors = gpInterpolationColors1;
            controlFont1.Brush = gpBrush1;
            controlFont1.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont1.InternalData")));
            gpBlend2.Blends = gpBlends2;
            gpBlendShape2.Focus = 0.5F;
            gpBlendShape2.Scale = 1F;
            gpBlend2.Shape = gpBlendShape2;
            gpBrush2.Blend = gpBlend2;
            gpBrush2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint2.X = 0F;
            gpCenterPoint2.Y = 0F;
            gpCenterColor2.Point = gpCenterPoint2;
            gpGradient2.CenterColor = gpCenterColor2;
            gpGradient2.Colors = gpColors2;
            gpGradient2.Path = gpPoints2;
            gpBrush2.Gradient = gpGradient2;
            gpHatch2.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch2.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush2.Hatch = gpHatch2;
            gpBrush2.InterpolationColors = gpInterpolationColors2;
            gpOptionalMultiPen1.Brush = gpBrush2;
            gpOptionalMultiPen1.Compound = gpPenCompound1;
            gpDashStyle1.CustomDash = gpCustomDash1;
            gpDashStyle1.Offset = 0F;
            gpOptionalMultiPen1.DashStyle = gpDashStyle1;
            gpOptionalMultiPen1.Enabled = false;
            gpOptionalMultiPen1.MiterLimit = 0F;
            gpOptionalMultiPen1.Width = 1F;
            controlFont1.Pen = gpOptionalMultiPen1;
            elementSize5.Value = 0.25F;
            controlFont1.Size = elementSize5;
            verticalCaption1.Font = controlFont1;
            elementOffsetSize1.Value = 0.8F;
            elementOffsets1.X = elementOffsetSize1;
            elementOffsetSize2.Value = 0F;
            elementOffsets1.Y = elementOffsetSize2;
            verticalCaption1.Position = elementOffsets1;
            this.linearGauge1.Caption = verticalCaption1;
            this.linearGauge1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(211)))), ((int)(((byte)(211)))), ((int)(((byte)(211)))));
            glass1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.linearGauge1.Glass = glass1;
            handAnimation1.Acceleration = 0.015F;
            handAnimation1.Resistance = 0.16F;
            optionalLinearGaugeHand1.Animation = handAnimation1;
            optionalLinearGaugeHand1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            elementSize6.Value = 0.25F;
            optionalLinearGaugeHand1.Length = elementSize6;
            optionalLinearGaugeHand1.Shadow = elementShadow1;
            elementSize7.Value = 0.15F;
            optionalLinearGaugeHand1.TailIndentSize = elementSize7;
            elementSize8.Value = 0.65F;
            optionalLinearGaugeHand1.TipLength = elementSize8;
            elementSize9.Value = 0.2F;
            optionalLinearGaugeHand1.TipWidth = elementSize9;
            elementSize10.Value = 0.03F;
            optionalLinearGaugeHand1.Width = elementSize10;
            this.linearGauge1.Hand = optionalLinearGaugeHand1;
            this.linearGauge1.InputPin = sinkPin1;
            this.linearGauge1.Location = new System.Drawing.Point(0, 0);
            this.linearGauge1.Max = 100D;
            this.linearGauge1.Min = 0D;
            this.linearGauge1.Name = "linearGauge1";
            elementSize11.Value = 0.9F;
            linearGaugeRail1.Length = elementSize11;
            elementOffsetSize3.Value = 0.1F;
            elementOffsets2.X = elementOffsetSize3;
            elementOffsetSize4.Value = 0F;
            elementOffsets2.Y = elementOffsetSize4;
            linearGaugeRail1.Position = elementOffsets2;
            elementSize12.Value = 0.08F;
            linearGaugeRail1.Width = elementSize12;
            this.linearGauge1.Rail = linearGaugeRail1;
            analogGaugeScaleRanges1.Color = System.Drawing.Color.FromArgb(((int)(((byte)(128)))), ((int)(((byte)(128)))), ((int)(((byte)(128)))));
            elementSize13.Value = 0.2F;
            analogGaugeScaleRanges1.Position = elementSize13;
            elementSize14.Value = 0.05F;
            analogGaugeScaleRanges1.Width = elementSize14;
            this.linearGauge1.Ranges = analogGaugeScaleRanges1;
            rotation1.Angle = 0F;
            rotation1.Width = 0.7F;
            this.linearGauge1.Rotation = rotation1;
            gpBlend3.Blends = gpBlends3;
            gpBlendShape3.Focus = 0.5F;
            gpBlendShape3.Scale = 1F;
            gpBlend3.Shape = gpBlendShape3;
            gpBrush3.Blend = gpBlend3;
            gpBrush3.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor3.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint3.X = 0F;
            gpCenterPoint3.Y = 0F;
            gpCenterColor3.Point = gpCenterPoint3;
            gpGradient3.CenterColor = gpCenterColor3;
            gpGradient3.Colors = gpColors3;
            gpGradient3.Path = gpPoints3;
            gpBrush3.Gradient = gpGradient3;
            gpHatch3.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch3.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush3.Hatch = gpHatch3;
            gpBrush3.InterpolationColors = gpInterpolationColors3;
            instrumentMajorTicks1.Brush = gpBrush3;
            instrumentMajorTicks1.Count = ((uint)(11u));
            instrumentTicksText1.Angle = 0F;
            gpBlend4.Blends = gpBlends4;
            gpBlendShape4.Focus = 0.5F;
            gpBlendShape4.Scale = 1F;
            gpBlend4.Shape = gpBlendShape4;
            gpBrush4.Blend = gpBlend4;
            gpBrush4.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor4.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint4.X = 0F;
            gpCenterPoint4.Y = 0F;
            gpCenterColor4.Point = gpCenterPoint4;
            gpGradient4.CenterColor = gpCenterColor4;
            gpGradient4.Colors = gpColors4;
            gpGradient4.Path = gpPoints4;
            gpBrush4.Gradient = gpGradient4;
            gpHatch4.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch4.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush4.Hatch = gpHatch4;
            gpBrush4.InterpolationColors = gpInterpolationColors4;
            controlFont2.Brush = gpBrush4;
            controlFont2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont2.InternalData")));
            gpBlend5.Blends = gpBlends5;
            gpBlendShape5.Focus = 0.5F;
            gpBlendShape5.Scale = 1F;
            gpBlend5.Shape = gpBlendShape5;
            gpBrush5.Blend = gpBlend5;
            gpBrush5.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor5.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint5.X = 0F;
            gpCenterPoint5.Y = 0F;
            gpCenterColor5.Point = gpCenterPoint5;
            gpGradient5.CenterColor = gpCenterColor5;
            gpGradient5.Colors = gpColors5;
            gpGradient5.Path = gpPoints5;
            gpBrush5.Gradient = gpGradient5;
            gpHatch5.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch5.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush5.Hatch = gpHatch5;
            gpBrush5.InterpolationColors = gpInterpolationColors5;
            gpOptionalMultiPen2.Brush = gpBrush5;
            gpOptionalMultiPen2.Compound = gpPenCompound2;
            gpDashStyle2.CustomDash = gpCustomDash2;
            gpDashStyle2.Offset = 0F;
            gpOptionalMultiPen2.DashStyle = gpDashStyle2;
            gpOptionalMultiPen2.Enabled = false;
            gpOptionalMultiPen2.MiterLimit = 0F;
            gpOptionalMultiPen2.Width = 1F;
            controlFont2.Pen = gpOptionalMultiPen2;
            elementSize15.Value = 0.09F;
            controlFont2.Size = elementSize15;
            instrumentTicksText1.Font = controlFont2;
            elementSize16.Value = 0.5F;
            instrumentTicksText1.Position = elementSize16;
            instrumentTicksText1.Visible = true;
            instrumentMajorTicks1.Labels = instrumentTicksText1;
            elementSize17.Value = 0.25F;
            instrumentMajorTicks1.Length = elementSize17;
            optionalInstrumentProperty1.Visible = true;
            instrumentEndTick1.TickLabel = optionalInstrumentProperty1;
            instrumentEndTick1.Visible = true;
            instrumentMajorTicks1.MaxTick = instrumentEndTick1;
            optionalInstrumentProperty2.Visible = true;
            instrumentEndTick2.TickLabel = optionalInstrumentProperty2;
            instrumentEndTick2.Visible = true;
            instrumentMajorTicks1.MinTick = instrumentEndTick2;
            elementSize18.Value = 0.01F;
            instrumentMajorTicks1.Thickness = elementSize18;
            instrumentMajorTicks1.Visible = true;
            reversibleGaugeScale1.MajorTicks = instrumentMajorTicks1;
            gpBlend6.Blends = gpBlends6;
            gpBlendShape6.Focus = 0.5F;
            gpBlendShape6.Scale = 1F;
            gpBlend6.Shape = gpBlendShape6;
            gpBrush6.Blend = gpBlend6;
            gpBrush6.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor6.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint6.X = 0F;
            gpCenterPoint6.Y = 0F;
            gpCenterColor6.Point = gpCenterPoint6;
            gpGradient6.CenterColor = gpCenterColor6;
            gpGradient6.Colors = gpColors6;
            gpGradient6.Path = gpPoints6;
            gpBrush6.Gradient = gpGradient6;
            gpHatch6.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch6.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush6.Hatch = gpHatch6;
            gpBrush6.InterpolationColors = gpInterpolationColors6;
            instrumentLabeledTicks1.Brush = gpBrush6;
            instrumentLabeledTicks1.Count = ((uint)(4u));
            instrumentTicksText2.Angle = 0F;
            gpBlend7.Blends = gpBlends7;
            gpBlendShape7.Focus = 0.5F;
            gpBlendShape7.Scale = 1F;
            gpBlend7.Shape = gpBlendShape7;
            gpBrush7.Blend = gpBlend7;
            gpBrush7.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor7.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint7.X = 0F;
            gpCenterPoint7.Y = 0F;
            gpCenterColor7.Point = gpCenterPoint7;
            gpGradient7.CenterColor = gpCenterColor7;
            gpGradient7.Colors = gpColors7;
            gpGradient7.Path = gpPoints7;
            gpBrush7.Gradient = gpGradient7;
            gpHatch7.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch7.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush7.Hatch = gpHatch7;
            gpBrush7.InterpolationColors = gpInterpolationColors7;
            controlFont3.Brush = gpBrush7;
            controlFont3.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont3.InternalData")));
            gpBlend8.Blends = gpBlends8;
            gpBlendShape8.Focus = 0.5F;
            gpBlendShape8.Scale = 1F;
            gpBlend8.Shape = gpBlendShape8;
            gpBrush8.Blend = gpBlend8;
            gpBrush8.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor8.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint8.X = 0F;
            gpCenterPoint8.Y = 0F;
            gpCenterColor8.Point = gpCenterPoint8;
            gpGradient8.CenterColor = gpCenterColor8;
            gpGradient8.Colors = gpColors8;
            gpGradient8.Path = gpPoints8;
            gpBrush8.Gradient = gpGradient8;
            gpHatch8.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch8.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush8.Hatch = gpHatch8;
            gpBrush8.InterpolationColors = gpInterpolationColors8;
            gpOptionalMultiPen3.Brush = gpBrush8;
            gpOptionalMultiPen3.Compound = gpPenCompound3;
            gpDashStyle3.CustomDash = gpCustomDash3;
            gpDashStyle3.Offset = 0F;
            gpOptionalMultiPen3.DashStyle = gpDashStyle3;
            gpOptionalMultiPen3.Enabled = false;
            gpOptionalMultiPen3.MiterLimit = 0F;
            gpOptionalMultiPen3.Width = 1F;
            controlFont3.Pen = gpOptionalMultiPen3;
            elementSize19.Value = 0.065F;
            controlFont3.Size = elementSize19;
            instrumentTicksText2.Font = controlFont3;
            elementSize20.Value = 0.45F;
            instrumentTicksText2.Position = elementSize20;
            instrumentTicksText2.Visible = false;
            instrumentLabeledTicks1.Labels = instrumentTicksText2;
            elementSize21.Value = 0.15F;
            instrumentLabeledTicks1.Length = elementSize21;
            elementSize22.Value = 0.005F;
            instrumentLabeledTicks1.Thickness = elementSize22;
            instrumentLabeledTicks1.Visible = true;
            reversibleGaugeScale1.MinorTicks = instrumentLabeledTicks1;
            elementSize23.Value = 0.25F;
            reversibleGaugeScale1.Position = elementSize23;
            scalePrecision1.FixedPrecision = false;
            scalePrecision1.NumberDigits = ((uint)(2u));
            reversibleGaugeScale1.Precision = scalePrecision1;
            this.linearGauge1.Scale = reversibleGaugeScale1;
            this.linearGauge1.Size = new System.Drawing.Size(60, 250);
            this.linearGauge1.TabIndex = 0;
            this.linearGauge1.TabStop = false;
            this.linearGauge1.Value = 0D;
            // 
            // gaugeRudderPosition
            // 
            controlBackground2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.gaugeRudderPosition.Background = controlBackground2;
            controlInnerBevel2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlInnerBevel2.InternalData")));
            elementSize24.Value = 0.05F;
            controlInnerBevel2.Width = elementSize24;
            rectControlBorder2.BevelInner = controlInnerBevel2;
            elementSize25.Value = 0.05F;
            controlBevel2.Width = elementSize25;
            rectControlBorder2.BevelOuter = controlBevel2;
            rectControlBorder2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            elementSize26.Value = 0.2F;
            rectControlBorder2.CornerRadius = elementSize26;
            rectControlBorder2.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("rectControlBorder2.InternalData")));
            elementSize27.Value = 0F;
            rectControlBorder2.Width = elementSize27;
            this.gaugeRudderPosition.Border = rectControlBorder2;
            verticalCaption2.Angle = 0F;
            gpBlend9.Blends = gpBlends9;
            gpBlendShape9.Focus = 0.5F;
            gpBlendShape9.Scale = 1F;
            gpBlend9.Shape = gpBlendShape9;
            gpBrush9.Blend = gpBlend9;
            gpBrush9.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor9.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint9.X = 0F;
            gpCenterPoint9.Y = 0F;
            gpCenterColor9.Point = gpCenterPoint9;
            gpGradient9.CenterColor = gpCenterColor9;
            gpGradient9.Colors = gpColors9;
            gpGradient9.Path = gpPoints9;
            gpBrush9.Gradient = gpGradient9;
            gpHatch9.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch9.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush9.Hatch = gpHatch9;
            gpBrush9.InterpolationColors = gpInterpolationColors9;
            controlFont4.Brush = gpBrush9;
            controlFont4.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont4.InternalData")));
            gpBlend10.Blends = gpBlends10;
            gpBlendShape10.Focus = 0.5F;
            gpBlendShape10.Scale = 1F;
            gpBlend10.Shape = gpBlendShape10;
            gpBrush10.Blend = gpBlend10;
            gpBrush10.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor10.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint10.X = 0F;
            gpCenterPoint10.Y = 0F;
            gpCenterColor10.Point = gpCenterPoint10;
            gpGradient10.CenterColor = gpCenterColor10;
            gpGradient10.Colors = gpColors10;
            gpGradient10.Path = gpPoints10;
            gpBrush10.Gradient = gpGradient10;
            gpHatch10.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch10.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush10.Hatch = gpHatch10;
            gpBrush10.InterpolationColors = gpInterpolationColors10;
            gpOptionalMultiPen4.Brush = gpBrush10;
            gpOptionalMultiPen4.Compound = gpPenCompound4;
            gpDashStyle4.CustomDash = gpCustomDash4;
            gpDashStyle4.Offset = 0F;
            gpOptionalMultiPen4.DashStyle = gpDashStyle4;
            gpOptionalMultiPen4.Enabled = false;
            gpOptionalMultiPen4.MiterLimit = 0F;
            gpOptionalMultiPen4.Width = 1F;
            controlFont4.Pen = gpOptionalMultiPen4;
            elementSize28.Value = 0.25F;
            controlFont4.Size = elementSize28;
            verticalCaption2.Font = controlFont4;
            elementOffsetSize5.Value = 0.8F;
            elementOffsets3.X = elementOffsetSize5;
            elementOffsetSize6.Value = 0F;
            elementOffsets3.Y = elementOffsetSize6;
            verticalCaption2.Position = elementOffsets3;
            this.gaugeRudderPosition.Caption = verticalCaption2;
            this.gaugeRudderPosition.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            this.gaugeRudderPosition.Curved = false;
            glass2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            glass2.Visible = false;
            this.gaugeRudderPosition.Glass = glass2;
            handAnimation2.Acceleration = 0.015F;
            handAnimation2.Resistance = 0.16F;
            optionalLinearGaugeHand2.Animation = handAnimation2;
            optionalLinearGaugeHand2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            elementSize29.Value = 0.5F;
            optionalLinearGaugeHand2.Length = elementSize29;
            optionalLinearGaugeHand2.Shadow = elementShadow2;
            elementSize30.Value = 0.15F;
            optionalLinearGaugeHand2.TailIndentSize = elementSize30;
            elementSize31.Value = 0.65F;
            optionalLinearGaugeHand2.TipLength = elementSize31;
            elementSize32.Value = 0.2F;
            optionalLinearGaugeHand2.TipWidth = elementSize32;
            elementSize33.Value = 0.03F;
            optionalLinearGaugeHand2.Width = elementSize33;
            this.gaugeRudderPosition.Hand = optionalLinearGaugeHand2;
            this.gaugeRudderPosition.InputPin = sinkPin2;
            this.gaugeRudderPosition.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("gaugeRudderPosition.InternalData")));
            this.gaugeRudderPosition.Location = new System.Drawing.Point(35, 295);
            this.gaugeRudderPosition.Max = 45D;
            this.gaugeRudderPosition.Min = -45D;
            this.gaugeRudderPosition.Name = "gaugeRudderPosition";
            elementSize34.Value = 0.9F;
            linearGaugeRail2.Length = elementSize34;
            elementOffsetSize7.Value = 0.1F;
            elementOffsets4.X = elementOffsetSize7;
            elementOffsetSize8.Value = 0F;
            elementOffsets4.Y = elementOffsetSize8;
            linearGaugeRail2.Position = elementOffsets4;
            elementSize35.Value = 0.08F;
            linearGaugeRail2.Width = elementSize35;
            this.gaugeRudderPosition.Rail = linearGaugeRail2;
            analogGaugeScaleRanges2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(128)))), ((int)(((byte)(128)))), ((int)(((byte)(128)))));
            elementSize36.Value = 0.2F;
            analogGaugeScaleRanges2.Position = elementSize36;
            elementSize37.Value = 0.05F;
            analogGaugeScaleRanges2.Width = elementSize37;
            this.gaugeRudderPosition.Ranges = analogGaugeScaleRanges2;
            rotation2.Angle = 90F;
            rotation2.Width = 0.7F;
            this.gaugeRudderPosition.Rotation = rotation2;
            gpBlend11.Blends = gpBlends11;
            gpBlendShape11.Focus = 0.5F;
            gpBlendShape11.Scale = 1F;
            gpBlend11.Shape = gpBlendShape11;
            gpBrush11.Blend = gpBlend11;
            gpBrush11.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterColor11.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint11.X = 0F;
            gpCenterPoint11.Y = 0F;
            gpCenterColor11.Point = gpCenterPoint11;
            gpGradient11.CenterColor = gpCenterColor11;
            gpGradient11.Colors = gpColors11;
            gpGradient11.Path = gpPoints11;
            gpBrush11.Gradient = gpGradient11;
            gpHatch11.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch11.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush11.Hatch = gpHatch11;
            gpBrush11.InterpolationColors = gpInterpolationColors11;
            instrumentMajorTicks2.Brush = gpBrush11;
            instrumentMajorTicks2.Count = ((uint)(5u));
            instrumentTicksText3.Angle = 0F;
            gpBlend12.Blends = gpBlends12;
            gpBlendShape12.Focus = 0.5F;
            gpBlendShape12.Scale = 1F;
            gpBlend12.Shape = gpBlendShape12;
            gpBrush12.Blend = gpBlend12;
            gpBrush12.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor12.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint12.X = 0F;
            gpCenterPoint12.Y = 0F;
            gpCenterColor12.Point = gpCenterPoint12;
            gpGradient12.CenterColor = gpCenterColor12;
            gpGradient12.Colors = gpColors12;
            gpGradient12.Path = gpPoints12;
            gpBrush12.Gradient = gpGradient12;
            gpHatch12.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch12.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush12.Hatch = gpHatch12;
            gpBrush12.InterpolationColors = gpInterpolationColors12;
            controlFont5.Brush = gpBrush12;
            controlFont5.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont5.InternalData")));
            gpBlend13.Blends = gpBlends13;
            gpBlendShape13.Focus = 0.5F;
            gpBlendShape13.Scale = 1F;
            gpBlend13.Shape = gpBlendShape13;
            gpBrush13.Blend = gpBlend13;
            gpBrush13.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor13.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint13.X = 0F;
            gpCenterPoint13.Y = 0F;
            gpCenterColor13.Point = gpCenterPoint13;
            gpGradient13.CenterColor = gpCenterColor13;
            gpGradient13.Colors = gpColors13;
            gpGradient13.Path = gpPoints13;
            gpBrush13.Gradient = gpGradient13;
            gpHatch13.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch13.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush13.Hatch = gpHatch13;
            gpBrush13.InterpolationColors = gpInterpolationColors13;
            gpOptionalMultiPen5.Brush = gpBrush13;
            gpOptionalMultiPen5.Compound = gpPenCompound5;
            gpDashStyle5.CustomDash = gpCustomDash5;
            gpDashStyle5.Offset = 0F;
            gpOptionalMultiPen5.DashStyle = gpDashStyle5;
            gpOptionalMultiPen5.Enabled = false;
            gpOptionalMultiPen5.MiterLimit = 0F;
            gpOptionalMultiPen5.Width = 1F;
            controlFont5.Pen = gpOptionalMultiPen5;
            elementSize38.Value = 0.09F;
            controlFont5.Size = elementSize38;
            instrumentTicksText3.Font = controlFont5;
            elementSize39.Value = 0.5F;
            instrumentTicksText3.Position = elementSize39;
            instrumentTicksText3.Visible = true;
            instrumentMajorTicks2.Labels = instrumentTicksText3;
            elementSize40.Value = 0.25F;
            instrumentMajorTicks2.Length = elementSize40;
            optionalInstrumentProperty3.Visible = true;
            instrumentEndTick3.TickLabel = optionalInstrumentProperty3;
            instrumentEndTick3.Visible = true;
            instrumentMajorTicks2.MaxTick = instrumentEndTick3;
            optionalInstrumentProperty4.Visible = true;
            instrumentEndTick4.TickLabel = optionalInstrumentProperty4;
            instrumentEndTick4.Visible = true;
            instrumentMajorTicks2.MinTick = instrumentEndTick4;
            elementSize41.Value = 0.01F;
            instrumentMajorTicks2.Thickness = elementSize41;
            instrumentMajorTicks2.Visible = true;
            reversibleGaugeScale2.MajorTicks = instrumentMajorTicks2;
            gpBlend14.Blends = gpBlends14;
            gpBlendShape14.Focus = 0.5F;
            gpBlendShape14.Scale = 1F;
            gpBlend14.Shape = gpBlendShape14;
            gpBrush14.Blend = gpBlend14;
            gpBrush14.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterColor14.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint14.X = 0F;
            gpCenterPoint14.Y = 0F;
            gpCenterColor14.Point = gpCenterPoint14;
            gpGradient14.CenterColor = gpCenterColor14;
            gpGradient14.Colors = gpColors14;
            gpGradient14.Path = gpPoints14;
            gpBrush14.Gradient = gpGradient14;
            gpHatch14.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch14.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush14.Hatch = gpHatch14;
            gpBrush14.InterpolationColors = gpInterpolationColors14;
            instrumentLabeledTicks2.Brush = gpBrush14;
            instrumentLabeledTicks2.Count = ((uint)(3u));
            instrumentTicksText4.Angle = 0F;
            gpBlend15.Blends = gpBlends15;
            gpBlendShape15.Focus = 0.5F;
            gpBlendShape15.Scale = 1F;
            gpBlend15.Shape = gpBlendShape15;
            gpBrush15.Blend = gpBlend15;
            gpBrush15.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor15.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint15.X = 0F;
            gpCenterPoint15.Y = 0F;
            gpCenterColor15.Point = gpCenterPoint15;
            gpGradient15.CenterColor = gpCenterColor15;
            gpGradient15.Colors = gpColors15;
            gpGradient15.Path = gpPoints15;
            gpBrush15.Gradient = gpGradient15;
            gpHatch15.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch15.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush15.Hatch = gpHatch15;
            gpBrush15.InterpolationColors = gpInterpolationColors15;
            controlFont6.Brush = gpBrush15;
            controlFont6.InternalData = ((Vcl.VclBinaryData)(resources.GetObject("controlFont6.InternalData")));
            gpBlend16.Blends = gpBlends16;
            gpBlendShape16.Focus = 0.5F;
            gpBlendShape16.Scale = 1F;
            gpBlend16.Shape = gpBlendShape16;
            gpBrush16.Blend = gpBlend16;
            gpBrush16.Color = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpCenterColor16.Color = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpCenterPoint16.X = 0F;
            gpCenterPoint16.Y = 0F;
            gpCenterColor16.Point = gpCenterPoint16;
            gpGradient16.CenterColor = gpCenterColor16;
            gpGradient16.Colors = gpColors16;
            gpGradient16.Path = gpPoints16;
            gpBrush16.Gradient = gpGradient16;
            gpHatch16.BackgroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(0)))));
            gpHatch16.ForegroundColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            gpBrush16.Hatch = gpHatch16;
            gpBrush16.InterpolationColors = gpInterpolationColors16;
            gpOptionalMultiPen6.Brush = gpBrush16;
            gpOptionalMultiPen6.Compound = gpPenCompound6;
            gpDashStyle6.CustomDash = gpCustomDash6;
            gpDashStyle6.Offset = 0F;
            gpOptionalMultiPen6.DashStyle = gpDashStyle6;
            gpOptionalMultiPen6.Enabled = false;
            gpOptionalMultiPen6.MiterLimit = 0F;
            gpOptionalMultiPen6.Width = 1F;
            controlFont6.Pen = gpOptionalMultiPen6;
            elementSize42.Value = 0.065F;
            controlFont6.Size = elementSize42;
            instrumentTicksText4.Font = controlFont6;
            elementSize43.Value = 0.45F;
            instrumentTicksText4.Position = elementSize43;
            instrumentTicksText4.Visible = false;
            instrumentLabeledTicks2.Labels = instrumentTicksText4;
            elementSize44.Value = 0.15F;
            instrumentLabeledTicks2.Length = elementSize44;
            elementSize45.Value = 0.005F;
            instrumentLabeledTicks2.Thickness = elementSize45;
            instrumentLabeledTicks2.Visible = true;
            reversibleGaugeScale2.MinorTicks = instrumentLabeledTicks2;
            elementSize46.Value = 0.25F;
            reversibleGaugeScale2.Position = elementSize46;
            scalePrecision2.FixedPrecision = false;
            scalePrecision2.NumberDigits = ((uint)(2u));
            reversibleGaugeScale2.Precision = scalePrecision2;
            reversibleGaugeScale2.Reversed = true;
            this.gaugeRudderPosition.Scale = reversibleGaugeScale2;
            this.gaugeRudderPosition.Size = new System.Drawing.Size(726, 153);
            this.gaugeRudderPosition.TabIndex = 121;
            this.gaugeRudderPosition.TabStop = false;
            this.gaugeRudderPosition.Text = "linearGauge2";
            this.gaugeRudderPosition.Value = 0D;
            // 
            // label36
            // 
            this.label36.BackColor = System.Drawing.Color.Black;
            this.label36.Font = new System.Drawing.Font("Arial", 14F);
            this.label36.ForeColor = System.Drawing.Color.White;
            this.label36.Location = new System.Drawing.Point(82, 324);
            this.label36.Name = "label36";
            this.label36.Size = new System.Drawing.Size(632, 25);
            this.label36.TabIndex = 129;
            this.label36.Text = "RUDDER POSITION";
            this.label36.TextAlign = System.Drawing.ContentAlignment.BottomCenter;
            // 
            // label1
            // 
            this.label1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.label1.Font = new System.Drawing.Font("Arial", 14F);
            this.label1.ForeColor = System.Drawing.Color.White;
            this.label1.Location = new System.Drawing.Point(41, 122);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(715, 25);
            this.label1.TabIndex = 148;
            this.label1.Text = "ENGINE SYNCHRONIZATION";
            this.label1.TextAlign = System.Drawing.ContentAlignment.BottomCenter;
            // 
            // lblPortSlow
            // 
            this.lblPortSlow.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(53)))), ((int)(((byte)(4)))));
            this.lblPortSlow.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.lblPortSlow.Font = new System.Drawing.Font("Arial", 14.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblPortSlow.Location = new System.Drawing.Point(41, 187);
            this.lblPortSlow.Name = "lblPortSlow";
            this.lblPortSlow.Size = new System.Drawing.Size(201, 63);
            this.lblPortSlow.TabIndex = 149;
            this.lblPortSlow.Text = "PORT SLOW";
            this.lblPortSlow.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblSync
            // 
            this.lblSync.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(3)))), ((int)(((byte)(30)))), ((int)(((byte)(2)))));
            this.lblSync.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.lblSync.Font = new System.Drawing.Font("Arial", 18F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblSync.Location = new System.Drawing.Point(257, 168);
            this.lblSync.Name = "lblSync";
            this.lblSync.Size = new System.Drawing.Size(283, 100);
            this.lblSync.TabIndex = 150;
            this.lblSync.Text = "SYNC";
            this.lblSync.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // lblStbdSlow
            // 
            this.lblStbdSlow.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(60)))), ((int)(((byte)(53)))), ((int)(((byte)(4)))));
            this.lblStbdSlow.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
            this.lblStbdSlow.Font = new System.Drawing.Font("Arial", 14.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.lblStbdSlow.Location = new System.Drawing.Point(557, 187);
            this.lblStbdSlow.Name = "lblStbdSlow";
            this.lblStbdSlow.Size = new System.Drawing.Size(199, 63);
            this.lblStbdSlow.TabIndex = 151;
            this.lblStbdSlow.Text = "STBD SLOW";
            this.lblStbdSlow.TextAlign = System.Drawing.ContentAlignment.MiddleCenter;
            // 
            // panel2
            // 
            this.panel2.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.panel2.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("panel2.BackgroundImage")));
            this.panel2.BackgroundImageLayout = System.Windows.Forms.ImageLayout.Stretch;
            this.panel2.Location = new System.Drawing.Point(146, 27);
            this.panel2.Name = "panel2";
            this.panel2.Size = new System.Drawing.Size(505, 77);
            this.panel2.TabIndex = 130;
            // 
            // elementHost1
            // 
            this.elementHost1.Location = new System.Drawing.Point(12, 138);
            this.elementHost1.Name = "elementHost1";
            this.elementHost1.Size = new System.Drawing.Size(300, 300);
            this.elementHost1.TabIndex = 152;
            this.elementHost1.Text = "elementHost1";
            this.elementHost1.Child = this.rudderPosGauge1;
            // 
            // elementHost2
            // 
            this.elementHost2.Location = new System.Drawing.Point(348, 87);
            this.elementHost2.Name = "elementHost2";
            this.elementHost2.Size = new System.Drawing.Size(300, 300);
            this.elementHost2.TabIndex = 153;
            this.elementHost2.Text = "elementHost2";
            this.elementHost2.Child = this.rudderPosGauge2;
            // 
            // Rudder
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(41)))), ((int)(((byte)(44)))), ((int)(((byte)(51)))));
            this.ClientSize = new System.Drawing.Size(800, 480);
            this.ControlBox = false;
            this.Controls.Add(this.elementHost2);
            this.Controls.Add(this.elementHost1);
            this.Controls.Add(this.lblStbdSlow);
            this.Controls.Add(this.lblSync);
            this.Controls.Add(this.lblPortSlow);
            this.Controls.Add(this.label1);
            this.Controls.Add(this.panel2);
            this.Controls.Add(this.label36);
            this.Controls.Add(this.gaugeRudderPosition);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;
            this.Margin = new System.Windows.Forms.Padding(2, 2, 2, 2);
            this.Name = "Rudder";
            this.Text = "Gps";
            ((System.ComponentModel.ISupportInitialize)(this.linearGauge1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.gaugeRudderPosition)).EndInit();
            this.ResumeLayout(false);

        }

        #endregion

        private Mitov.InstrumentLab.LinearGauge linearGauge1;
        private Mitov.InstrumentLab.LinearGauge gaugeRudderPosition;
        private System.Windows.Forms.Label label36;
        private System.Windows.Forms.Panel panel2;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Label lblPortSlow;
        private System.Windows.Forms.Label lblSync;
        private System.Windows.Forms.Label lblStbdSlow;
        private System.Windows.Forms.Integration.ElementHost elementHost1;
        private WhatTheHelmFormsLib.RudderPosGauge rudderPosGauge1;
        private System.Windows.Forms.Integration.ElementHost elementHost2;
        private WhatTheHelmFormsLib.RudderPosGauge rudderPosGauge2;
    }
}